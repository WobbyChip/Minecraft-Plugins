package me.wobbychip.smptweaks.custom.disableinvulnerability;

import java.lang.reflect.Field;

import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;

import me.wobbychip.smptweaks.utils.ReflectionUtils;
import net.minecraft.server.level.EntityPlayer;

public class Events implements Listener {
	private Field invulnerableTicks = null;

	@EventHandler(priority = EventPriority.MONITOR)
	private void onPlayerJoin(PlayerJoinEvent event) {
		setInvulnerableField(ReflectionUtils.getEntityPlayer(event.getPlayer()), 1);
	}

	public Field getInvulnerableField(EntityPlayer player) {
		if (invulnerableTicks != null) { return invulnerableTicks; }

		for (Field field : EntityPlayer.class.getDeclaredFields()) {
			if (field.getType().equals(int.class)) {
				try {
					if (((int) field.get(player)) == 60) { return (invulnerableTicks = field); }
				} catch (IllegalArgumentException | IllegalAccessException e) {}
			}
		}

		return null;
	}

	public void setInvulnerableField(EntityPlayer player, int value) {
		try {
			Field invulnerable = getInvulnerableField(player);
			invulnerable.set(player, value);
		} catch (IllegalArgumentException | IllegalAccessException e) {
			e.printStackTrace();
		}
	}
}
