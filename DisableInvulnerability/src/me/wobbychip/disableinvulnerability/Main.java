package me.wobbychip.disableinvulnerability;

import java.lang.reflect.InvocationTargetException;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener {
	Class<?> CraftPlayer;
	String fieldName;

	@Override
	public void onEnable() {
		String version = Bukkit.getServer().getClass().getPackage().getName().split("\\.")[3];

    	try {
    		CraftPlayer = Class.forName("org.bukkit.craftbukkit." + version + ".entity.CraftPlayer");
		} catch (ClassNotFoundException e) {
        	Bukkit.getConsoleSender().sendMessage(ChatColor.translateAlternateColorCodes('&', "&9[DisableInvulnerability] Could not load class!"));
        	e.printStackTrace();
        	Bukkit.getPluginManager().disablePlugin(this);
		}

    	//Dumb idiots at Mojang decided to again change names of the fields
    	if (version.contains("v1_17")) {
    		fieldName = "cD";
    	} else {
    		fieldName = "invulnerableTicks";
    	}

        Bukkit.getPluginManager().registerEvents(this, this);
		Bukkit.getConsoleSender().sendMessage(ChatColor.translateAlternateColorCodes('&', "&9[DisableInvulnerability] DisableInvulnerability has loaded!"));
		Bukkit.getConsoleSender().sendMessage(ChatColor.translateAlternateColorCodes('&', "&9[DisableInvulnerability] Server Version: " + version));
	}

    @EventHandler(priority=EventPriority.MONITOR)
    private void onPlayerJoin(PlayerJoinEvent event) {
		try {
			Object craftPlayer = CraftPlayer.cast(event.getPlayer());
			Object entityPlayer = event.getPlayer().getClass().getDeclaredMethod("getHandle").invoke(craftPlayer);
			entityPlayer.getClass().getField(fieldName).set(entityPlayer, 1);
		} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException | NoSuchFieldException e) {
			e.printStackTrace();
		}
    }
}